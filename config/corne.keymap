/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W    &kp E      &kp R                 &kp T        &kp Y               &kp U      &kp I    &kp O     &kp P  &none
&none  &kp A  &kp S    &kp D      &kp F                 &kp G        &kp H               &kp J      &kp K    &kp L  &kp SEMI  &none
&none  &kp Z  &kp X    &kp C      &kp V                 &kp B        &kp N               &kp M  &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp TAB  &kp LCTRL  &mt LEFT_SHIFT ENTER    &kp SPACE  &mt LALT BACKSPACE      &to 1
            >;

            label = "QWERTY";
        };

        NAV_NUM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none      &kp N1  &kp NUMBER_2  &kp NUMBER_3            &kp N4                &kp N5    &kp NUMBER_6                  &kp N7    &kp NUMBER_8  &kp NUMBER_9      &kp NUMBER_0  &none
&none   &kp GRAVE     &kp MINUS     &kp EQUAL  &kp LEFT_BRACKET     &kp RIGHT_BRACKET        &kp LEFT            &kp UP_ARROW  &kp DOWN_ARROW     &kp RIGHT  &kp SINGLE_QUOTE  &none
&none  &kp ESCAPE        &trans        &trans            &trans                &trans          &kp F2             &kp PAGE_UP   &kp PAGE_DOWN        &kp F3     &kp BACKSLASH  &none
                                        &to 0  &kp LEFT_CONTROL  &mt LEFT_SHIFT ENTER       &kp SPACE  &mt LEFT_ALT BACKSPACE           &to 2
            >;

            label = "Navigation and Numbers";
        };

        BLUETOOTH {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none      &kp EXCL        &kp AT      &kp HASH          &kp DLLR             &kp PRCNT    &kp CARET                &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 0          &bt BT_SEL 4    &kp MINUS               &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &none
&none        &trans        &trans        &trans        &bt BT_CLR                &trans    &kp UNDER                &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &none
                                          &to 0  &kp LEFT_CONTROL  &mt LEFT_SHIFT ENTER    &kp SPACE  &mt LEFT_ALT BACKSPACE            &to 1
            >;

            label = "Bluetooth";
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
